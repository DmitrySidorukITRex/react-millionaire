{"version":3,"file":"static/Main.4b68d7e248fdaa03866e.chunk.js","mappings":"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","sources":["webpack://react-millionaire/./src/pages/main/components/hint/hint.module.scss?ae9d","webpack://react-millionaire/./src/pages/main/components/hint/hint.jsx","webpack://react-millionaire/./src/pages/main/components/results/results.constants.js","webpack://react-millionaire/./src/pages/main/components/results/results.jsx","webpack://react-millionaire/./src/pages/main/components/results/results.module.scss?ce9b","webpack://react-millionaire/./src/pages/main/main.constants.js","webpack://react-millionaire/./src/pages/main/main.service.js","webpack://react-millionaire/./src/pages/main/main.provider.jsx","webpack://react-millionaire/./src/pages/main/modals/call-hint-modal/call-hint-modal.jsx","webpack://react-millionaire/./src/pages/main/modals/end-game-modal/end-game-modal.jsx","webpack://react-millionaire/./src/pages/main/modals/hall-hint-modal/hall-hint-modal.module.scss?201b","webpack://react-millionaire/./src/pages/main/modals/hall-hint-modal/hall-hint-modal.jsx","webpack://react-millionaire/./src/pages/main/questions/answer/answer.jsx","webpack://react-millionaire/./src/pages/main/questions/questions.jsx","webpack://react-millionaire/./src/pages/main/questions/questions.module.scss?13e3","webpack://react-millionaire/./src/pages/main/main.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hint\":\"QSQtfF5ccz7ZZuVztK7m\",\"half\":\"i6JSbUn4kZRX33g6eWmk\",\"hall\":\"bIluH8JpNCd8YpPEb1Hw\",\"call\":\"hiQJLN4c4AsV5MAlqFwa\",\"disabled\":\"u1evzVnpREXkNPI8imnp\"};","import React from 'react';\nimport classes from './hint.module.scss';\nimport classNames from 'classnames';\nimport sound from '../../sounds/select-hint.mp3';\n\nconst HintButton = ({ name, hintsActivated, hintClicked }) => {\n  const onHintClicked = () => {\n    const audio = new Audio(sound);\n    audio.play();\n    hintClicked(name);\n  };\n\n  return (\n    <div\n      className={classNames(classes.hint, classes[name], {\n        [classes.disabled]: hintsActivated.includes(name),\n      })}\n      onClick={onHintClicked}\n    ></div>\n  );\n};\n\nexport default HintButton;\n","export const ResultsList = [\n  {\n    round: 1,\n    money: '100',\n  },\n  {\n    round: 2,\n    money: '200',\n  },\n  {\n    round: 3,\n    money: '300',\n  },\n  {\n    round: 4,\n    money: '500',\n  },\n  {\n    round: 5,\n    money: '1 000',\n  },\n  {\n    round: 6,\n    money: '2 000',\n  },\n  {\n    round: 7,\n    money: '4 000',\n  },\n  {\n    round: 8,\n    money: '8 000',\n  },\n  {\n    round: 9,\n    money: '16 000',\n  },\n  {\n    round: 10,\n    money: '32 000',\n  },\n  {\n    round: 11,\n    money: '64 000',\n  },\n  {\n    round: 12,\n    money: '125 000',\n  },\n  {\n    round: 13,\n    money: '250 000',\n  },\n  {\n    round: 14,\n    money: '500 000',\n  },\n  {\n    round: 15,\n    money: '1 000 000',\n  },\n];\n","import React from 'react';\nimport classes from './results.module.scss';\nimport { ResultsList } from './results.constants';\nimport classNames from 'classnames';\n\nconst Results = ({ currentRoundIndex }) => {\n  function isNonBurnable(round) {\n    switch (round) {\n      case 5:\n      case 10:\n      case 15:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  return (\n    <div className={classes.results}>\n      {ResultsList.map((result, index) => {\n        let resultItemClasses = classNames(classes['results-item'], {\n          [classes['active-round']]: currentRoundIndex === index,\n          [classes['non-burnable']]: isNonBurnable(result.round),\n        });\n\n        return (\n          <div className={resultItemClasses} key={index}>\n            <span className={classes.round}>{result.round}</span>\n            <span>{`$ ${result.money}`}</span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Results;\n","// extracted by mini-css-extract-plugin\nexport default {\"results\":\"bnL2eqWjCCtrjjM3myRe\",\"results-item\":\"MoyOXfJA4wCXdMGeIDnJ\",\"non-burnable\":\"kwJA8yf5xAR8ZNy7yfWS\",\"active-round\":\"OZf3TTzRDGKDFChykXAW\",\"round\":\"qZCioAJQZeqGCsIgfsve\"};","export const Descriptions = [\n  `Добро пожаловать в онлайн-версию знаменитого игрового шоу \"Кто хочет стать миллионером?\". В этой уникальной игре\n  можно ощутить себя настоящим участником телепрограммы, завоевавшей миллионы поклонников по всему миру. Онлайн\n  версия игры позволит в режиме реального времени стать главным героем нашумевшей передачи.`,\n  `Игра доступна для каждого, кто хочет проверить себя в серии тестов, состоящих из интересных вопросов и\n  неожиданных ответов. Испытайте свою интеллект просто используя свои знания и весело проводя время.`,\n  `Игра состоит из 15 вопросов. Уровень сложности и шансы получить деньги увеличиваются с каждым новым вопросом.\n  Например, при ответе на первый блок вопросов Ваш призовой фонд составит от 100 до 1000 рублей. Играйте,\n  правильно отвечайте на вопросы в процессе игры – и призовой фонд будет увеличиваться на глазах, пока Вы не\n  дойдете до финального вопроса, и если Вы ответите на него правильно, то станете счастливым обладателем миллиона\n  рублей!`,\n  `Ключом к успеху является Ваши интеллект, так что вперед за призом! Вооружившись самыми разнообразными знаниями,\n  которые Вы приобрели за свою жизнь, Вы сможете легко и быстро заработать свой миллион рублей!`,\n];\n\nexport const Hints = {\n  Half: 'half',\n  Hall: 'hall',\n  Call: 'call',\n};\n","import { request } from '../../core/utils/request';\n\nexport const getRounds = async () => {\n  try {\n    const { data } = await request({\n      method: 'get',\n      url: '/rounds',\n    });\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const updateUserRating = async (id, gamesCount, scores) => {\n  try {\n    const { data } = await request({\n      method: 'patch',\n      url: `/users/${id}/rating`,\n      data: { gamesCount, scores },\n    });\n    return data;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import React, { createContext, useEffect, useState } from 'react';\nimport { getRounds } from './main.service';\n\nexport const MainContext = createContext({\n  rounds: [],\n  getRounds: () => undefined,\n});\n\nexport const MainProvider = ({ children }) => {\n  const [rounds, setRounds] = useState([]);\n\n  useEffect(() => {\n    getRoundsFromApi();\n  }, []);\n\n  const getRoundsFromApi = () => {\n    setRounds([]);\n    getRounds()\n      .then((rounds) => setRounds(rounds))\n      .catch((error) => console.log(error));\n  };\n\n  const contextValue = {\n    rounds,\n    getRounds: getRoundsFromApi,\n  };\n\n  return <MainContext.Provider value={contextValue}>{children}</MainContext.Provider>;\n};\n\n// export const useRounds = () => {\n//   const store = useContext(MainContext);\n//   return store;\n// };\n","import React from 'react';\nimport './call-hint-modal.module.scss';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport { DialogContent } from '@mui/material';\n\nconst CallHintModal = ({ rightAnswer, open, onClose }) => {\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" onClose={onClose} open={open}>\n      <DialogTitle>Подсказка Друга</DialogTitle>\n      <DialogContent>\n        <p>\n          Ваш друг говорит: \"Так хочется потянуть резину, но это же элементарно! Как такой вопрос мог поставить тебя в\n          тупик? Правильный ответ \"{rightAnswer}\"!\n        </p>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CallHintModal;\n","import React, { useEffect } from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport { DialogContent } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport congratsSound from '../../sounds/congrats.mp3';\nimport sorrySound from '../../sounds/sorry.mp3';\n\nconst EndGameModal = ({ isWon, scores, restartGame, open, handleClose }) => {\n  useEffect(() => {\n    const src = isWon ? congratsSound : sorrySound;\n    const audio = new Audio(src);\n    audio.load();\n    audio.play();\n  }, [isWon]);\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" onClose={handleClose} open={open}>\n      <DialogContent>\n        {isWon ? (\n          <h2>Поздравляю, вы выиграли один миллион долларов!!!</h2>\n        ) : (\n          <h2>К сожалению, вы проиграли. Ваш результат {scores}$. Попробуйте ещё раз!</h2>\n        )}\n        <Button variant=\"outlined\" onClick={restartGame}>\n          Начать заново\n        </Button>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default EndGameModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"chart\":\"c4UNEdAN5gSAbi8eYaDV\",\"chart-item\":\"MmnpTj46OwxYy_NFxlf8\",\"graph\":\"PPIGQXudK1aT5dPND5s4\"};","import React, { useState, useEffect } from 'react';\nimport classes from './hall-hint-modal.module.scss';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport { DialogContent } from '@mui/material';\n\nconst HallHintModal = ({ answers, rightAnswer, open, onClose }) => {\n  const [chart, setChart] = useState([]);\n\n  useEffect(() => {\n    const calculateChart = (answers, rightAnswer) => {\n      const rightAnswerIndex = answers.indexOf(rightAnswer);\n      let chart = [];\n      let count = 100;\n      for (let i = 0; i < answers.length; i++) {\n        if (i !== answers.length - 1) {\n          const random = i === rightAnswerIndex ? getRandomInt(50, 80) : getRandomInt(0, 10);\n          count -= random;\n          chart.push({ letter: getLetter(i), count: random });\n        } else {\n          chart.push({ letter: getLetter(i), count: count });\n        }\n      }\n      setChart(chart);\n    };\n\n    calculateChart(answers, rightAnswer);\n  }, [answers, rightAnswer]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  function getLetter(index) {\n    switch (index) {\n      case 0:\n        return 'A';\n      case 1:\n        return 'B';\n      case 2:\n        return 'C';\n      case 3:\n        return 'D';\n      default:\n        return '';\n    }\n  }\n\n  return (\n    <Dialog fullWidth maxWidth=\"sm\" onClose={handleClose} open={open}>\n      <DialogTitle>Подсказка Зала</DialogTitle>\n      <DialogContent>\n        <div className={classes.chart}>\n          {chart.map((item, index) => {\n            return (\n              <div key={index} className={classes['chart-item']}>\n                <div className={classes.graph} style={{ height: item.count * 2 }}></div>\n                <div className={classes.count}>{item.count + ' % '}</div>\n                <div className={classes.letter}>{item.letter}</div>\n              </div>\n            );\n          })}\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default HallHintModal;\n","import React from 'react';\nimport './answer.scss';\n\nconst ButtonState = {\n  Normal: 'normal',\n  Active: 'active',\n  RightAnswer: 'right-answer',\n  Hidden: 'hidden',\n};\n\nconst Answer = ({ text, currentAnswer, rightAnswer, currentHint, index, onAnswerClicked }) => {\n  function answerClicked() {\n    onAnswerClicked(text);\n  }\n\n  function getLetter(index) {\n    switch (index) {\n      case 0:\n        return 'A';\n      case 1:\n        return 'B';\n      case 2:\n        return 'C';\n      case 3:\n        return 'D';\n\n      default:\n        break;\n    }\n  }\n\n  function getButtonState(currentAnswer, rightAnswer) {\n    if (!text) {\n      return ButtonState.Hidden;\n    } else if (currentAnswer && rightAnswer && rightAnswer === text) {\n      return ButtonState.RightAnswer;\n    } else if (currentAnswer && currentAnswer === text) {\n      return ButtonState.Active;\n    }\n\n    return ButtonState.Normal;\n  }\n\n  return (\n    <div className={`answer ${getButtonState(currentAnswer, rightAnswer)}`} onClick={answerClicked}>\n      {getLetter(index)} : {text}\n    </div>\n  );\n};\n\nexport default Answer;\n","import React, { useState } from 'react';\nimport Answer from './answer/answer';\nimport classes from './questions.module.scss';\n\nconst Questions = ({ round, answerClicked }) => {\n  const [currentAnswer, setCurrentAnswer] = useState();\n  const [rightAnswer, setRightAnswer] = useState();\n\n  const onAnswerClicked = (text) => {\n    setCurrentAnswer(text);\n\n    setTimeout(() => {\n      setRightAnswer(round.rightAnswer);\n      const isAnswerRight = round.rightAnswer === text;\n      answerClicked(isAnswerRight);\n    }, 2000);\n  };\n\n  return (\n    <div className={classes.component}>\n      <div className={classes.question}>\n        <span>{round.question}</span>\n      </div>\n      <div className={classes.answers}>\n        {round.answers.map((answer, index) => {\n          return (\n            <Answer\n              key={index}\n              index={index}\n              text={answer}\n              currentAnswer={currentAnswer}\n              rightAnswer={rightAnswer}\n              onAnswerClicked={onAnswerClicked}\n            />\n          );\n        })}\n        <div className={classes.roundNumber}>{round.roundNumber}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Questions;\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"wPMwpy6rxN98b3JU2OVu\",\"question\":\"NzBGk2NykOlorsWEBKAa\",\"answers\":\"G0JAe0EVaYxziIS2nJOw\",\"roundNumber\":\"LEwAyJebkM_MO8fx4BHS\"};","import CircularProgress from '@mui/material/CircularProgress';\nimport React, { useContext, useState } from 'react';\nimport { getCurrentUser } from '../../core/auth/auth.service';\nimport HintButton from './components/hint/hint';\nimport Results from './components/results/results';\nimport { Descriptions, Hints } from './main.constants';\nimport { MainContext, MainProvider } from './main.provider';\nimport './main.scss';\nimport { updateUserRating } from './main.service';\nimport CallHintModal from './modals/call-hint-modal/call-hint-modal';\nimport EndGameModal from './modals/end-game-modal/end-game-modal';\nimport HallHintModal from './modals/hall-hint-modal/hall-hint-modal';\nimport Questions from './questions/questions';\nimport fullGameSoundUrl from './sounds/full-game.mp3';\nimport rightAnswerSound from './sounds/right-answer.mp3';\nimport wrongAnswerSound from './sounds/wrong-answer.mp3';\n\nconst fullGameSound = new Audio(fullGameSoundUrl);\n\nconst Main = () => {\n  const [currentRoundIndex, setCurrentRoundIndex] = useState(0);\n  const [activatedHints, setActivatedHints] = useState([]);\n  const [isWon, setIsWon] = useState(false);\n  const [modals, setModals] = useState({ hallHint: false, callHint: false, endGame: false });\n  const { rounds, getRounds } = useContext(MainContext);\n\n  const answerClicked = (isAnswerRight) => {\n    isAnswerRight ? onRightAnswer() : onWrongAnswer();\n  };\n\n  const getScores = (isWon) => {\n    if (currentRoundIndex < 5) return 0;\n    else if (currentRoundIndex >= 5 && currentRoundIndex < 10) return 1000;\n    else if (!isWon && currentRoundIndex >= 10 && currentRoundIndex < 15) return 32000;\n    else return 1000000;\n  };\n\n  const onHintClick = (name) => {\n    setActivatedHints([...activatedHints, name]);\n\n    switch (name) {\n      case Hints.Half:\n        onHalfHintClick();\n        break;\n      case Hints.Hall:\n        onHallHintClick();\n        break;\n      case Hints.Call:\n        onCallHintClick();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onHalfHintClick = () => {\n    const currentRound = rounds[currentRoundIndex];\n    const rightAnswer = currentRound.rightAnswer;\n    const wrongAnswers = currentRound.answers.filter((x) => x !== rightAnswer);\n    const randomWrongAnswer = wrongAnswers[Math.floor(Math.random() * wrongAnswers.length)];\n    const answers = [rightAnswer, randomWrongAnswer];\n\n    currentRound.answers = currentRound.answers.map((answer) => {\n      return answers.includes(answer) ? answer : null;\n    });\n  };\n\n  const onHallHintClick = () => {\n    setModals({ ...modals, hallHint: true });\n  };\n\n  const onCallHintClick = () => {\n    setModals({ ...modals, callHint: true });\n  };\n\n  const closeModals = () => {\n    setModals({ callHint: false, hallHint: false, endGame: false });\n  };\n\n  const restartGame = () => {\n    setModals({ ...modals, endGame: false });\n    setCurrentRoundIndex(0);\n    setActivatedHints([]);\n    getRounds();\n  };\n\n  const loadSound = (src) => {\n    fullGameSound.pause();\n    const sound = new Audio(src);\n    sound.play();\n  };\n\n  const onRightAnswer = () => {\n    loadSound(rightAnswerSound);\n    setTimeout(() => {\n      if (currentRoundIndex === rounds.length - 1) {\n        setIsWon(true);\n        setModals({ ...modals, endGame: true });\n        updateRating(true);\n      } else {\n        setCurrentRoundIndex((curr) => curr + 1);\n        fullGameSound.play();\n      }\n    }, 2000);\n  };\n\n  const updateRating = (isWon) => {\n    const user = getCurrentUser().user;\n    updateUserRating(user._id, 1, getScores(isWon)).then();\n  };\n\n  const onWrongAnswer = () => {\n    loadSound(wrongAnswerSound);\n    setTimeout(() => {\n      setIsWon(false);\n      setModals({ ...modals, endGame: true });\n    }, 2000);\n    updateRating(false);\n  };\n\n  const descriptions = Descriptions.map((x, i) => {\n    return <p key={i}>{x}</p>;\n  });\n  const hints = [Hints.Half, Hints.Hall, Hints.Call];\n  const hintsLayout = hints.map((hint, index) => (\n    <HintButton key={index} name={hint} hintsActivated={activatedHints} hintClicked={onHintClick} />\n  ));\n\n  return (\n    <div className=\"component\">\n      <h1>Игра \"Кто хочет стать миллионером\"</h1>\n      {descriptions}\n      <div className=\"game\">\n        {rounds.length ? (\n          <div>\n            <div className=\"hints\">{hintsLayout}</div>\n            <img className=\"logo\" alt=\"logo\" src=\"/images/logo.png\" />\n            <div className=\"results\">\n              <Results currentRoundIndex={currentRoundIndex} />\n            </div>\n            <Questions round={rounds[currentRoundIndex]} answerClicked={answerClicked} />\n\n            {modals.hallHint ? (\n              <HallHintModal\n                answers={rounds[currentRoundIndex].answers}\n                rightAnswer={rounds[currentRoundIndex].rightAnswer}\n                open={modals.hallHint}\n                onClose={closeModals}\n              />\n            ) : null}\n            {modals.callHint ? (\n              <CallHintModal\n                rightAnswer={rounds[currentRoundIndex].rightAnswer}\n                open={modals.callHint}\n                onClose={closeModals}\n              />\n            ) : null}\n            {modals.endGame ? (\n              <EndGameModal\n                isWon={isWon}\n                scores={getScores(isWon)}\n                open={modals.endGame}\n                restartGame={restartGame}\n                onClose={closeModals}\n              />\n            ) : null}\n          </div>\n        ) : (\n          <CircularProgress color=\"inherit\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst MainWithContext = () => {\n  return (\n    <MainProvider>\n      <Main />\n    </MainProvider>\n  );\n};\n\nexport default MainWithContext;\n"],"names":["name","hintsActivated","hintClicked","className","classNames","classes","includes","onClick","Audio","sound","play","ResultsList","round","money","currentRoundIndex","map","result","index","resultItemClasses","isNonBurnable","Descriptions","Hints","getRounds","request","method","url","data","console","log","updateUserRating","id","gamesCount","scores","MainContext","createContext","rounds","MainProvider","children","useState","setRounds","useEffect","getRoundsFromApi","then","catch","error","contextValue","Provider","value","rightAnswer","open","onClose","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","isWon","restartGame","handleClose","audio","congratsSound","sorrySound","load","Button","variant","answers","chart","setChart","getRandomInt","min","max","Math","ceil","floor","random","getLetter","rightAnswerIndex","indexOf","count","i","length","push","letter","calculateChart","item","style","height","text","currentAnswer","currentHint","onAnswerClicked","getButtonState","answerClicked","setCurrentAnswer","setRightAnswer","setTimeout","isAnswerRight","question","answer","roundNumber","fullGameSound","fullGameSoundUrl","Main","setCurrentRoundIndex","activatedHints","setActivatedHints","setIsWon","hallHint","callHint","endGame","modals","setModals","useContext","getScores","onHintClick","onHalfHintClick","onHallHintClick","onCallHintClick","currentRound","wrongAnswers","filter","x","randomWrongAnswer","closeModals","loadSound","src","pause","updateRating","user","getCurrentUser","_id","descriptions","hintsLayout","hint","alt","rightAnswerSound","curr","wrongAnswerSound","CircularProgress","color"],"sourceRoot":""}